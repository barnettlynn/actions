# This is a basic workflow that is manually triggered

name: Build Workflow
concurrency: production

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: true
  push:
    branches:
      - main

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    - name: Checkout Repository
      uses: actions/checkout@v2
    - name: Install Dependencies 
      run: npm install
    - name: Compile Typescript
      run: npx tsc app.ts
    - name: Package
      run: npx sls package --package app
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: my-artifact
        path: app/
        retention-days: 5
      

  deployDev:
    name: Deploy
    needs: [build]
    conc
    # inputs:
    #   environment:
    #     type: environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Install Dependencies 
        run: npm install
      - name: Download the build output
        uses: actions/download-artifact@v2
        with:
          name: my-artifact
          path: ./app/
      - name: List dir
        run: ls -la
      - name: Deploy To AWS Dev
        env: 
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: npx sls deploy --package ./app

  deployQA:
    name: DeployQA
    needs: [build]
    environment:
      name: QA
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Install Dependencies 
        run: npm install
      - name: Download the build output
        uses: actions/download-artifact@v2
        with:
          name: my-artifact
          path: ./app/
      - name: List dir
        run: ls -la
      - name: Deploy To AWS Dev
        env: 
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: npx sls deploy --package ./app

  deployStage:
    name: DeployStage
    needs: [build]
    environment:
      name: Stage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Install Dependencies 
        run: npm install
      - name: Download the build output
        uses: actions/download-artifact@v2
        with:
          name: my-artifact
          path: ./app/
      - name: List dir
        run: ls -la
      - name: Deploy To AWS Dev
        env: 
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: npx sls deploy --package ./app

  deployProd:
    name: DeployProd
    needs: [build]
    environment:
      name: Prod
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Install Dependencies 
        run: npm install
      - name: Download the build output
        uses: actions/download-artifact@v2
        with:
          name: my-artifact
          path: ./app/
      - name: List dir
        run: ls -la
      - name: Deploy To AWS Dev
        env: 
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: npx sls deploy --package ./app